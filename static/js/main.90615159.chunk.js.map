{"version":3,"sources":["serviceWorker.js","pokemon/pokemon.js","safari-zone/safari-zone.js","home/home.js","result/success.js","result/failure.js","index.js"],"names":["Boolean","window","location","hostname","match","Pokemon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pokemon","click","_this2","react_default","a","createElement","className","close","complete","onClick","clicked","src","concat","React","Component","SafariZone","_this$state","pokemons","duplicatePokemons","pokemonPositions","defineProperty","start","name","index","encounteredPokemons","length","setTimeout","check","push","setState","randomPositions","shuffle","map","fail","catchedPokemons","pokeballsLeft","numVal","rounds","console","warn","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","_this3","log","newTo","pathname","userName","pokeballs","react_router","to","pokemon_Pokemon","handleClick","Home","e","target","value","class","type","placeholder","onChange","onChangeInput","bind","react_router_dom","Success","Failure","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90615159.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './pokemon.css'\r\n\r\n\r\nexport default class Pokemon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n      }\r\n    clicked(pokemon){\r\n      this.props.click(pokemon)\r\n    }\r\n    render(){\r\n      return (\r\n        <div className={\r\n            \"col col-3 card \" + (!this.props.close ? ' opened' : '') + (\r\n                this.props.complete ? ' matched' : ''\r\n                )} \r\n            onClick={\r\n                () => this.props.complete ?\r\n                 null : this.clicked(\r\n                     this.props.pokemon\r\n                )}>\r\n          <div className=\"front\">\r\n            <img className=\"img-thumbnail\" src={`/img/pokeball.png`}/>\r\n          </div>\r\n          <div className=\"back\">\r\n            <img src={`/img/${this.props.pokemon}.png`}/>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport Pokemon from './../pokemon/pokemon'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './safari-zone.css'\r\n\r\nexport default class SafariZone extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          pokemons: ['bulbasaur','charmander','eevee','jigglypuff','pikachu','psyduck','snorlax','squirtle'],          \r\n          duplicatePokemons: [],\r\n          pokemonPositions: [],\r\n          duplicatePokemons: [],\r\n          randomPositions: [],\r\n          encounteredPokemons: [],\r\n          catchedPokemons: [],\r\n          rounds: 0,\r\n          pokeballsLeft: 20,\r\n        }\r\n        this.start()\r\n      }\r\n\r\n      handleClick(name,index){\r\n        if(this.state.encounteredPokemons.length == 2){\r\n          setTimeout(() => {\r\n            this.check()\r\n          },500)\r\n        }else {\r\n          let pokemon = {\r\n            name,\r\n            index\r\n          }\r\n          let pokemonPositions = this.state.pokemonPositions\r\n          let pokemons = this.state.encounteredPokemons\r\n          pokemonPositions[index].close = false\r\n          pokemons.push(pokemon)\r\n          this.setState({\r\n            encounteredPokemons: pokemons,\r\n            pokemonPositions: pokemonPositions\r\n          })\r\n          if(this.state.encounteredPokemons.length == 2){\r\n            setTimeout(() => {\r\n              this.check()\r\n            },500)\r\n          }\r\n        }\r\n      }\r\n      \r\n      \r\n      start(){\r\n        let pokemonPositions = [];\r\n        this.state.duplicatePokemons = this.state.pokemons.concat(this.state.pokemons)\r\n        this.state.randomPositions = this.shuffle(this.state.duplicatePokemons)\r\n        this.state.randomPositions.map((name,index) => {\r\n            pokemonPositions.push({\r\n            name,\r\n            close: true,\r\n            complete: false,\r\n            fail: false\r\n          })\r\n        })\r\n        this.state.pokemonPositions = pokemonPositions\r\n      }\r\n\r\n      check(){\r\n        let pokemonPositions= this.state.pokemonPositions;\r\n        let catchedPokemons = this.state.catchedPokemons;\r\n        const pokeballsLeft = this.state.pokeballsLeft;\r\n        const numVal = this.state.rounds;\r\n\r\n\r\n        if((this.state.encounteredPokemons[0].name == this.state.encounteredPokemons[1].name) && (this.state.encounteredPokemons[0].index != this.state.encounteredPokemons[1].index)){\r\n          pokemonPositions[this.state.encounteredPokemons[0].index].complete = true\r\n          pokemonPositions[this.state.encounteredPokemons[1].index].complete = true\r\n          catchedPokemons.push(this.state.encounteredPokemons[0].index, this.state.encounteredPokemons[1].index )\r\n        }else {\r\n          pokemonPositions[this.state.encounteredPokemons[0].index].close = true\r\n          pokemonPositions[this.state.encounteredPokemons[1].index].close = true\r\n        }\r\n\r\n        this.setState({\r\n          rounds: numVal + 1,\r\n          pokeballsLeft: pokeballsLeft - 1,\r\n          pokemonPositions,\r\n          encounteredPokemons: []\r\n        })\r\n        console.warn(this.state.pokeballsLeft , catchedPokemons.length)\r\n      }\r\n\r\n      shuffle(array){\r\n        let currentIndex = array.length, temporaryValue, randomIndex;\r\n        while (0 !== currentIndex) {\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n        return array\r\n      }\r\n      \r\n      render(){\r\n        if(this.state.catchedPokemons.length == 16 || this.state.pokeballsLeft == 0){\r\n            console.log('game finished')\r\n            const newTo = { \r\n                pathname: \"\", \r\n                userName: this.props.location.userName,\r\n                pokeballs: this.state.pokeballsLeft\r\n              };\r\n            this.state.catchedPokemons.length == 16 ? newTo.pathname = \"/success\" : newTo.pathname = \"/failure\"\r\n            return <Redirect to={newTo} />\r\n         }\r\n        \r\n        return (\r\n            <div className=\"container safari-zone pt-3\">\r\n                <div className=\"justify-content-center\">\r\n                    <div className=\"col col-12 align-self-center\">\r\n                        <div className=\"bs-component\">\r\n                            <h4>Hello { this.props.location.userName }</h4>\r\n                            <p className=\"text-light font-weight-bold\">Round: <strong>{this.state.rounds}</strong> - Pokeballs: <strong>{this.state.pokeballsLeft}</strong></p>\r\n                            <p className=\"text-light font-weight-bold\">Pokemons Catched: <strong>{this.state.catchedPokemons.length}</strong>.</p>\r\n                            <div className=\"row\">\r\n                            {\r\n                            this.state.pokemonPositions.map((pokemon, index) => {\r\n                                return <Pokemon \r\n                                    pokemon={pokemon.name} \r\n                                    click={() => this.state.encounteredPokemons.length ==  2 ? null : this.handleClick(pokemon.name,index)} \r\n                                    close={pokemon.close} \r\n                                    complete={pokemon.complete}/>\r\n                            })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n  }","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userName: ''\r\n        }\r\n    }\r\n\r\n    registerUser() {\r\n        this.setState({\r\n          userName: this.state.userName\r\n        })\r\n    }\r\n\r\n    onChangeInput(e) {\r\n        this.setState({\r\n          userName: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const newTo = { \r\n            pathname: \"/SafariZone\", \r\n            userName: this.state.userName \r\n          };\r\n          \r\n        return (\r\n            <div className=\"container safari-zone col col-8 pt-5\">\r\n                <div className=\"justify-content-center\">\r\n                    <div className=\"form-group text-center\">\r\n                        <h3 className=\"font-weight-bold text-white\">Welcome to Safari Zone!</h3>\r\n                        <p class=\"text-justify text-white\">This is a special zone to catch unique Pokemons! There is no fighting here. You go inside, pet and feed the pokemons. And if they like you, you may even catch them!</p>\r\n                        <p class=\"text-justify text-white\">Choose your level, catch them all, and you may win a prize!</p>\r\n                        <input type=\"text\" className=\"form-control\" \r\n                            value={this.state.userName}\r\n                            placeholder=\"What is your name?\"\r\n                            onChange={this.onChangeInput.bind(this)}/>\r\n                        <Link to={newTo} className=\"btn btn-success m-2\"> Enter </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Success extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-100 py-3 justify-content-center\">\r\n                <div className=\"w-75 mx-auto text-center\">\r\n                    <h3 className=\"text-white\">Congragulations {this.props.location.userName}!</h3>\r\n                    <h3 className=\"text-white\">Your score: { this.props.location.pokeballs }</h3>\r\n                    <p className=\"text-white\">By completing the competition succesfully, you have been awarded with this rare and shiny Pikachu Card</p>\r\n                    <img className=\"img-fluid img-thumbnail w-100\" src=\"./img/prize.jpg\"/>\r\n                    <Link to={'/'}> <p className=\"btn btn-success m-2 text-warning\">Start Over</p> </Link>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Failure extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"w-100 py-3 justify-content-center\">\r\n                <div className=\"w-75 mx-auto  text-center\">\r\n                    <h3 className=\"text-white\">You are out of Pokeballs!</h3>\r\n                    <Link to={'/'}> <p className=\"btn btn-success m-2 text-warning\">Start Over</p> </Link>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SafariZone from './safari-zone/safari-zone'\r\nimport Home from './home/home'\r\n\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport Success from './result/success';\r\nimport Failure from './result/failure';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css'\r\n\r\n\r\n\r\n\r\nReactDOM.render((  \r\n    <BrowserRouter>\r\n    <div className=\"navbar navbar-light bg-light\">\r\n      <Link to={'/'}> <h2 className=\"text-warning\">Safari Zone!</h2> </Link>\r\n    </div>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/SafariZone\" component={SafariZone} />\r\n      <Route path=\"/success\" component={Success} />\r\n      <Route path=\"/failure\" component={Failure} />\r\n    </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}